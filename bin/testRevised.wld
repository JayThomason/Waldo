PingPong

/**
  * Simple example: user can start a message stream by calling the public
  * function initiateSend on Ping.  This starts a sequence of three
  * messages that increment counters on both endpoints, printing along the
  * way.
*/


Endpoint Ping;
Endpoint Pong;


Traces
{
        // specifies order of handlers that will be called
         Something : Ping.one -> Pong.two -> Ping.three -> Pong.four;
}


/**** Data shared between both ends */
Shared
{
        //both of these are rarely used in this program.
        Ping Controls Number pingCounter = 0;
        Nothing Controls Number pongCounter = 0;
        
}

MessageSequence Something
{
       Number something = 0;
       Ping.one()
       {
            pingCounter = pingCounter + 1;
       }
       Pong.two
       {
            pongCounter = pongCounter + 1;
       }
       Ping.three
       {
            pingCounter = pingCounter + 1;  
       }
       Pong.four
       {
            pongCounter = pongCounter + 1;  
       }
}



/****  New endpoint *********/
Ping
{

        OnCreate ()
        {}

                
        Public Function initiateSend() Returns Nothing
        {
            pongCounter = 20;
            Print('Initiating send ****');
            one();
        }


}


/****  New endpoint *********/
Pong
{
        
}
