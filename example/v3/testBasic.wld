Basic

Endpoint Ping;
Endpoint Pong;

//last id=11

Sequences
{
        testSeq: Ping.one -> Pong.two -> Ping.three
}

MessageSequence testSeq
{
        Number betweener = 1;      // id = 7
        Ping.one(Number someArg)   // id = 6   (someArg id=8)
        {
            betweener = betweener + someArg; // betweener=1
        }
        Pong.two //id 10
        {
            nothingShared = nothingShared + someArg; //nothingShared= 1
        }
        Ping.three //id 11
        {
            pingNum = betweener + someArg + nothingShared //pingnum = 1+0+1
        }
}


Shared
{
        Ping controls Number pingNum = 0;            // id = 0
        Nothing controls Number nothingShared = 1;   // id = 5
}

Pong
{
}

Ping
{
        Number otherPingNum = 0;       // id = 1

        Public function msgSeq() returns Number //id 9
        {
            one(otherPingNum);
            return pingNum;
            //return otherPingNum;
        }
        
        Public Function incPing() returns Number //id = 2
        {
            pingNum = pingNum + 1;
            return pingNum;
        }

        Public Function incOtherPing()  returns Number //id = 3
        {
            otherPingNum = otherPingNum + 1;
            return otherPingNum;
        }

        Public Function switch()  // id = 4
        {
            Number tmp = pingNum;
            pingNum = otherPingNum;
            otherPingNum = tmp;
        }

        Public Function printBoth()
        {
            print(pingNum);
            print(otherPingNum);
        }
}
