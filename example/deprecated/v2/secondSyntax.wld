Suggested

Endpoint Bank;
Endpoint Customer;


Traces
{
        SetBalance : Bank.setBalance -> Customer.receiveBalance;
        DepositCheckSpend : Customer.depositDCS -> Bank.rcvDepositDCS -> Customer.checkDCS -> Bank.spendDCS;
}

Shared
{
        Bank Controls balance = 0;
}


SetBalance
{
        Bank.setBalance(Number toSetTo)
        {
            balance toSetTo
        }
        Customer.receiveBalance
        {}
}

DepositCheckSpend
{
        Number toDeposit = 0;
        Number toSpend = 0;
        
        Customer.depositDCS(Number toDep,Number toSpnd)
        {
            toDeposit = toDep;
            toSpend = toSpnd;
        }
        Bank.rcvDepositDCS
        {
            balance = balance + toDeposit;
        }
        Customer.checkDCS
        {
            If (balance < toSpend)
               toSpend = 0;
        }
        Bank.spendDCS
        {
            balance = balance - toSpend;
        }
}


Bank
{
        Public getBalance () Returns Number
        {
            Return balance;
        }

        Public initiateSetBalance(Number toSetTo) Returns Nothing
        {
            setBalance(toSetTo);
        }
}


Customer
{
        Public getBalance () Returns Number
        {
            Return balance;
        }

        Public initiateDCS(Number toDeposit,Number toSpend) Returns Nothing
        {
            depositDCS(toDeposit,toSpend);            
        }
}
