LoopTests

Endpoint SingleSide;
Endpoint Garbage;

Sequences{}

Garbage{}

SingleSide
{
    // tests range
    Public Function range_test(Number base, Number limit, Number increment)
        returns List(element: Number)
    {
        return range(base,limit,increment);
    }

    Public Function no_increment_range_test(Number base,Number limit)
        returns List(element: Number)
    {
        return range(base, limit);
    }

    // basic while tests
    Public Function test_while_less_than(
        Number lhs, Number rhs) returns Number
    {
        Number times_in_loop = 0;

        while (lhs < rhs)
        {
            times_in_loop += 1;
            lhs += 1;
        }

        return times_in_loop;
    }

    Public Function test_empty_while()
    {
        while (False)
        {}
    }


    
    // basic for tests

    Public Function range_for_test(Number num_iterations)
        returns Number
    {
        Number counter = 0;
        for (Number i in range(0,num_iterations))
        {
            counter += 1;
        }

        return counter;
    }

    Public Function empty_for_test()
    {
        for (Number i in range(0,2))
        {}
    }

    Public Function list_iter_for_test(List(element:Text) list_)
        returns List(element:Text)
    {
        List(element: Text) to_return;
        for (Text t in list_)
            to_return.append(t);
        
        return to_return;
    }
    
}
